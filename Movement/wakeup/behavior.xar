<?xml version="1.0" encoding="UTF-8" ?><ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3"><Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0"><bitmap>media/images/box/root.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Wake Up" id="1" localization="8" tooltip="This box contains a Python script that makes the robot leave the docking station." x="211" y="71"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[from naoqi import ALProxy
import qi
import sys

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.recharge = ALProxy("ALRecharge")
        self.motion = ALProxy("ALMotion")
        self.memory = ALProxy("ALMemory")
        self.al = ALProxy("ALAutonomousLife")
        self.animated_speech = ALProxy("ALAnimatedSpeech")

        self.configuration = {"bodyLanguageMode": "contextual"}
        try:
            self.voice_speed = "\\RSPD=" + str(self.memory.getData("CAIR/voice_speed")) + "\\"
        except:
            self.voice_speed = "\\RSPD=80\\"

        try:
            self.language = self.memory.getData("CAIR/language")
        except:
            self.language = "en"

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        self.logger.info(self.al.getState())
        if self.language == "it":
            to_say = "Sto lasciando la mia docking station"
        else:
            to_say = "I am leaving my docking station"
        self.animated_speech.say(self.voice_speed + to_say, self.configuration)
        try:
            self.recharge.leaveStation()
            if self.language == "it":
                to_say = "Ho lasciato la mia docking station con successo."
            else:
                to_say = "I have successfully left my docking station."
            self.animated_speech.say(self.voice_speed + to_say, self.configuration)
        except:
            if self.language == "it":
                to_say = "Mi dispice, non riesco a lasciare la mia docking station."
            else:
                to_say = "I'm sorry I can't leave my docking station."
            self.animated_speech.say(self.voice_speed + to_say, self.configuration)

        self.onInput_onStop()

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box></ChoregrapheProject>